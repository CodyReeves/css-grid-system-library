// sass-lint:disable quotes

////
/// String Helpers
/// @group string-helpers
////

/// @name Find and Replace
/// Find and replace for strings
/// @param {string} $string - String you want to search
/// @param {string} $search - String you are searching for
/// @param {string | value} $replace - What to replace with
/// @return {string} string with replaced text/values

@function find-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);
  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + find-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}

/// @name List To String
/// Converts a list to a string
/// @param {list} $list - A list
/// @param {list} $glue [' '] - what the seperator between each item will be
/// @return {string} $string

@function list-to-string($list, $glue: ' ') {
  $res: null;
  $len: length($list);

  @for $i from 1 through $len {
    $e: nth($list, $i);
    @if $i == $len {
      $res: unquote("#{$res}#{$e}");
    } @else {
      $res: unquote("#{$res}#{$e}#{$glue}");
    }
  }

  @return $res;
}

/// @name Strip unit
/// Strips the unit from a number
/// @param $value - A value with any unit
/// @return {integer} $value with no unit

@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
}

/// @name String to number
/// Converts a string to a number
/// @param {string} $value - A string that could be a number
/// @return {integer} A number

@function to-number($value) {
  @if type-of($value) == 'number' {
    @return $value;
  } @else if type-of($value) != 'string' {
    $_: log('Value for `to-number` should be a number or a string.');
  }

  $result: 0;
  $digits: 0;
  $minus: str-slice($value, 1, 1) == '-';
  $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);

  @for $i from if($minus, 2, 1) through str-length($value) {
    $character: str-slice($value, $i, $i);

    @if not (index(map-keys($numbers), $character) or $character == '.') {
      @return to-length(if($minus, -$result, $result), str-slice($value, $i));
    }

    @if $character == '.' {
      $digits: 1;
    } @else if $digits == 0 {
      $result: $result * 10 + map-get($numbers, $character);
    } @else {
      $digits: $digits * 10;
      $result: $result + map-get($numbers, $character) / $digits;
    }
  }

  @return if($minus, -$result, $result);
}


/// @name String Ends With
/// Returns true or fasle if string ends with the find
/// @param {string} $string - A string that yoy want to search
/// @param {string} $find - A string on what you want to find
/// @return {boolean}

@function ends-with($string, $find) {
  @if str-slice($string, (str-length($string) - str-length($find) + 1)) == $find {
    @return true;
  } @else {
    @return false;
  }
}

/// @name String Starts With
/// Returns true or fasle if string starts with the find
/// @param {string} $string - A string that yoy want to search
/// @param {string} $find - A string on what you want to find
/// @return {boolean}

@function starts-with($string, $find) {
  @if str-slice($string, 1, str-length($find)) == $find {
    @return true;
  } @else {
    @return false;
  }
}
